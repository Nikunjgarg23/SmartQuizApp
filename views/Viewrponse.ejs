<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Responses</title>
    <!-- Import Chart.js library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            /* Background gradient from white to light black */
            background: linear-gradient(to right, #ffffff, #e0e0e0);
            margin: 0;
            padding: 0;
            font-family: 'Lato', sans-serif;
        }

        .container {
            display: flex;
            justify-content: space-between;
            gap: 20px;
            margin-top: 50px;
            /* Adjust top margin as needed */
            padding: 0 20px;
            /* Added padding to the container */
        }

        .graph-card {
            flex: 1;
            background-color: #f7f7f7;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 2px 4px 8px rgba(0.2, 0.2, 0.2, 0.4);
        }

        /* Center the canvas within the graph card */
        canvas {
            display: block;
            margin: auto;
        }


        @media screen and (max-width: 500px) {
            .container {
                flex-direction: column;
                /* Set to row for larger screens */
            }

            .graph-card {
                flex: 1;
                /* Occupy equal space horizontally */
            }
        }
    </style>
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@500&display=swap" rel="stylesheet">
    <script src="https://kit.fontawesome.com/f44dd27b35.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <title>
        <%= title %>
    </title>
    <script src="https://kit.fontawesome.com/f44dd27b35.js" crossorigin="anonymous"></script>

</head>

<body>
    <nav class="navbar navbar-dark bg-dark fixed-top" style="margin-bottom: 50%;">
        <div class="container-fluid">
            <a class="navbar-brand" href="#" onclick="goBack()">Back</a>
           
            <a class="navbar-brand" href="/teacher">Teacher Portal</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas"
                data-bs-target="#offcanvasDarkNavbar" aria-controls="offcanvasDarkNavbar"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="offcanvas offcanvas-end text-bg-dark" tabindex="-1" id="offcanvasDarkNavbar"
                aria-labelledby="offcanvasDarkNavbarLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasDarkNavbarLabel">Teacher Portal</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas"
                        aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
                        <li class="nav-item">
                            <a href="/teacher/completed" class="list-group-item list-group-item-action py-2 ripple"
                                style="color: aliceblue;"><i class="fas fa-globe fa-fw me-3"></i><span>Completed
                                    Quizes</span></a>
                        </li>
                        <li class="nav-item">
                            <a href="/teacher/pastquiz" class="list-group-item list-group-item-action py-2 ripple"
                                style="color: aliceblue;"><i class="fas fa-globe fa-fw me-3"></i><span>Available
                                    Quizes</span></a>
                        </li>
                        <li class="nav-item">
                            <a href="/teacher/quizmaker" class="list-group-item list-group-item-action py-2 ripple"
                                style="color: aliceblue;"><i class="fas fa-building fa-fw me-3"></i><span>Make New Quiz
                                </span></a>
                        </li>
                        <li>
                            <a href="/teacher/changepassword" class="list-group-item list-group-item-action py-2 ripple"
                                style="color: aliceblue;"><i class="fas fa-lock fa-fw me-3"></i><span> Change
                                    Password</span></a>
                        </li>
                        <li>
                            <a href="/teacher/logout" class="list-group-item list-group-item-action py-2 ripple"
                                style="color: aliceblue;"><i class="fas fa-lock fa-fw me-3"></i><span>Logout</span></a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>
    <div class="container" style="margin-top: 18vh;">
        <div class="graph-card">
            <h2>Students Performance</h2>
            <!-- Canvas element to render the pie chart -->
            <canvas id="myPieChart" width="250" height="250"></canvas>
        </div>

        <div class="graph-card">
            <h2>Bar Graph</h2>
            <!-- Canvas element to render the bar graph -->
            <canvas id="myBarGraph" width="250" height="250"></canvas>
        </div>
    </div>
    <div>

        <div id="ul1">
            <div style="width: 95%; margin-left: 2vw;">
                <div class="row">
                    <div class="my-3">
                        <div class="card text-bg-secondary mb-3"
                            style="border-color: black; border-width: 1.5px; box-shadow: 0 6px 8px rgba(0, 0.3, 0.3, 0.3); ">
                            <div class="card-body"
                                style="padding: 20px; background: linear-gradient(to left, #fff, #000);">
                                <div style="display: flex; flex-direction: row;">
                                    <span style="display: inline-block; width: 35%;">
                                        <h5>Name</h5>
                                    </span>
                                    
                                   
                                    <span class="text-black" style="display: inline-block; width: 30%;">
                                        <h5>Score</h5>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <table class="table"
            style="margin-left: 2vw;width: 95%; box-shadow: 0 6px 8px rgba(0, 0.3, 0.3, 0.3); padding-left: 1vw; background: linear-gradient(to left, #fff, #000);">
            <tbody>
                <% for(let i of student1){ %>
                    <tr style="background-color: aquamarine;">
                        <td style="padding-right: 10px;">
                            <%= i.name %>
                        </td>
                        <td style="padding-right: 47px;"></td>
                        <td>
                            
                        </td>
                        <td style="padding-right: 7px;">

                        </td>
                        <td style="padding-right: 7px;">

                        </td>
                        <td style="padding-right: 7px;">

                        </td>
                        <td style="padding-right: 7px;">

                        </td>
                        <td style="padding-right: 7px;">

                        </td>
                        <td >
                            <a href="/teacher/viewstures/?id=<%=i._id%>&quizid=<%=quizid%>"
                                class="btn btn-dark">View</a>
                        </td>
                    </tr>
                    <% } %>
            </tbody>
        </table>



        <script>
            // Hardcoded student marks
            // Get the scores from student1, student2, and student3 arrays
            const s1 = `<%= JSON.stringify(student1) %>`;
            const ss=`<%= lenn %>`;
            // console.log("ss");
            // console.log(ss);
    
            // Decode HTML entities
            const decodedString = s1.replace(/&#(\d+);/g, function (match, dec) {
                return String.fromCharCode(dec);
            });
    
            // Parse the JSON string into a JavaScript array of objects
            const studentArray = JSON.parse(decodedString);
    
            // Iterate over the studentArray to access each student's score
            const student1Scores = studentArray.map(student => student.score);
    
            // Combine all scores into a single array
            const allScores = [...student1Scores];
    
            // Count of students falling into different categories
            let below40 = 0;
            let between40and80 = 0;
            let above80 = 0;
            let totalmarks=ss*5;
            let t2=totalmarks*0.4;
            // let t4=totalmarks*0.6;
            let t5=totalmarks*0.8;
            // Calculate the counts based on the dynamically obtained scores
            allScores.forEach(score => {
                if (score < t2) {
                    below40++;
                } else if (score >= t2 && score < t5) {
                    between40and80++;
                } else {
                    above80++;
                }
            });
    
            // Create a pie chart instance
            const pieCtx = document.getElementById('myPieChart').getContext('2d');
            const pieChart = new Chart(pieCtx, {
                type: 'pie',
                data: {
                    labels: ['Below 40%', '40% - 80%', 'Above 80%'],
                    datasets: [{
                        label: 'Student Responses',
                        data: [below40, between40and80, above80],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(54, 162, 235, 0.5)',
                            'rgba(75, 192, 192, 0.5)',
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(75, 192, 192, 1)',
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: false, // Adjust as needed
                    maintainAspectRatio: false, // Adjust as needed
                }
            });
    
            // Create a bar graph instance
            const barCtx = document.getElementById('myBarGraph').getContext('2d');
            const barGraph = new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: ['Below 40%', '40% - 80%', 'Above 80%'],
                    datasets: [{
                        label: 'Student Responses',
                        data: [below40, between40and80, above80],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(54, 162, 235, 0.5)',
                            'rgba(75, 192, 192, 0.5)',
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(75, 192, 192, 1)',
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: false, // Adjust as needed
                    maintainAspectRatio: false, // Adjust as needed
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        </script>
        <script>
            function goBack() {
                window.history.back();
            }
        </script>
        
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>
</body>

</html>
